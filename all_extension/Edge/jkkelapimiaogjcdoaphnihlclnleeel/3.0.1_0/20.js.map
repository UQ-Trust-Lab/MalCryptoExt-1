{"version":3,"sources":["webpack:///./src/background/axios/createInstance.js","webpack:///./src/background/axios/isLoadingMiddleware.js","webpack:///./src/background/auth/extensionLogout.js","webpack:///./src/background/rest/logout.js","webpack:///./src/background/services/extensionLogout.js"],"names":["createInstance","middlewares","instance","axios","create","baseURL","api","isLoadingMiddleware","forEach","middleware","activeRequests","notify","type","includes","publish","requestFulfilled","config","requestRejected","error","Promise","reject","responseFulfilled","response","responseRejected","interceptors","request","use","extensionLogout","logout","clear","url","headers","Authorization","store","access_token","get","data"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA,MAAMA,cAAc,GAAG,CAAC,GAAGC,WAAJ,KAAoB;AACzC,QAAMC,QAAQ,GAAGC,4CAAK,CAACC,MAAN,CAAa;AAAEC,WAAO,EAAEC,GAAG,CAACD;AAAf,GAAb,CAAjB;AACAE,sEAAmB,CAACL,QAAD,CAAnB;AACAD,aAAW,CAACO,OAAZ,CAAoBC,UAAU,IAAIA,UAAU,CAACP,QAAD,CAA5C;AACA,SAAOA,QAAP;AACD,CALD;;AAOeF,6EAAf,E;;;;;;;;;ACVA;AAAA;AAAA;AAEA,IAAIU,cAAc,GAAG,CAArB;;AAEA,MAAMC,MAAM,GAAGC,IAAI,IAAI;AACrBF,gBAAc,IAAIE,IAAI,KAAK,eAAT,GAA2B,CAA3B,GAA+B,CAAC,CAAlD;;AACA,MAAI,CAAC,CAAD,EAAI,CAAJ,EAAOC,QAAP,CAAgBH,cAAhB,CAAJ,EAAqC;AACnCI,0DAAO,CAAC;AAAEJ;AAAF,KAAD,CAAP;AACD;AACF,CALD;;AAOA,MAAMK,gBAAgB,GAAGC,MAAM,IAAI;AACjCL,QAAM,CAAC,eAAD,EAAkBK,MAAlB,CAAN;AACA,SAAOA,MAAP;AACD,CAHD;;AAKA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/BP,QAAM,CAAC,eAAD,EAAkBO,KAAlB,CAAN;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAHD;;AAKA,MAAMG,iBAAiB,GAAGC,QAAQ,IAAI;AACpCX,QAAM,CAAC,kBAAD,EAAqBW,QAArB,CAAN;AACA,SAAOA,QAAP;AACD,CAHD;;AAKA,MAAMC,gBAAgB,GAAGL,KAAK,IAAI;AAChCP,QAAM,CAAC,gBAAD,EAAmBO,KAAnB,CAAN;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAHD;;AAKA,MAAMX,mBAAmB,GAAGL,QAAQ,IAAI;AACtCA,UAAQ,CAACsB,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkCX,gBAAlC,EAAoDE,eAApD;AACAf,UAAQ,CAACsB,YAAT,CAAsBF,QAAtB,CAA+BI,GAA/B,CAAmCL,iBAAnC,EAAsDE,gBAAtD;AACD,CAHD;;AAKehB,kFAAf,E;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AACA;;AAEA,MAAMoB,eAAe,GAAG,MAAM;AAC5BC,6DAAM;AACNC,sDAAK;AACN,CAHD;;AAKeF,8EAAf,E;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA,MAAMxB,KAAK,GAAGH,qEAAc,EAA5B,C,CAEA;;AACO,MAAM4B,MAAM,GAAG,YAAY;AAChC,QAAME,GAAG,GAAI,YAAb;AACA,QAAMC,OAAO,GAAG;AAAEC,iBAAa,EAAG,UAASC,4CAAK,CAACC,YAAa;AAA9C,GAAhB;AACA,QAAMZ,QAAQ,GAAG,MAAMnB,KAAK,CAACgC,GAAN,CAAUL,GAAV,EAAe;AAAEC;AAAF,GAAf,CAAvB;AACA,SAAOT,QAAQ,CAACc,IAAhB;AACD,CALM,C;;;;;;;;ACNP;AAAA;AAAA;AAEeT,4HAAf,E","file":"20.js","sourcesContent":["import axios from 'axios';\nimport isLoadingMiddleware from './isLoadingMiddleware';\n\nconst createInstance = (...middlewares) => {\n  const instance = axios.create({ baseURL: api.baseURL });\n  isLoadingMiddleware(instance);\n  middlewares.forEach(middleware => middleware(instance));\n  return instance;\n};\n\nexport default createInstance;\n","import { publish } from '../store';\n\nlet activeRequests = 0;\n\nconst notify = type => {\n  activeRequests += type === 'request-start' ? 1 : -1;\n  if ([0, 1].includes(activeRequests)) {\n    publish({ activeRequests });\n  }\n};\n\nconst requestFulfilled = config => {\n  notify('request-start', config);\n  return config;\n};\n\nconst requestRejected = error => {\n  notify('request-error', error);\n  return Promise.reject(error);\n};\n\nconst responseFulfilled = response => {\n  notify('response-success', response);\n  return response;\n};\n\nconst responseRejected = error => {\n  notify('response-error', error);\n  return Promise.reject(error);\n};\n\nconst isLoadingMiddleware = instance => {\n  instance.interceptors.request.use(requestFulfilled, requestRejected);\n  instance.interceptors.response.use(responseFulfilled, responseRejected);\n};\n\nexport default isLoadingMiddleware;\n","import { logout } from '../rest/logout';\nimport { clear } from '../store';\n\nconst extensionLogout = () => {\n  logout();\n  clear();\n};\n\nexport default extensionLogout;\n","import createInstance from '../axios/createInstance';\nimport { store } from '../store';\n\nconst axios = createInstance();\n\n// org.springframework.security.web.authentication.logout.LogoutSuccessHandler#onLogoutSuccess\nexport const logout = async () => {\n  const url = `app/logout`;\n  const headers = { Authorization: `Bearer ${store.access_token}` };\n  const response = await axios.get(url, { headers });\n  return response.data;\n};\n","import extensionLogout from '../auth/extensionLogout';\n\nexport default extensionLogout;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/background/axios/createInstance.js","webpack:///./src/background/axios/isLoadingMiddleware.js","webpack:///./src/background/services/getBarcodeImage.js","webpack:///./src/background/qr-encode.js","webpack:///util (ignored)","webpack:///util (ignored)?8f83","webpack:///./src/background/rest/SaaspassBarcodeResource.js"],"names":["createInstance","middlewares","instance","axios","create","baseURL","api","isLoadingMiddleware","forEach","middleware","activeRequests","notify","type","includes","publish","requestFulfilled","config","requestRejected","error","Promise","reject","responseFulfilled","response","responseRejected","interceptors","request","use","getBarcodeImage","sessionId","barcodeimage","getBarcode","qrEncode","text","options","ec_level","size","margin","buffer","imageSync","base64","toString","uuid","url","get","data"],"mappings":"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","file":"18.js","sourcesContent":["import axios from 'axios';\nimport isLoadingMiddleware from './isLoadingMiddleware';\n\nconst createInstance = (...middlewares) => {\n  const instance = axios.create({ baseURL: api.baseURL });\n  isLoadingMiddleware(instance);\n  middlewares.forEach(middleware => middleware(instance));\n  return instance;\n};\n\nexport default createInstance;\n","import { publish } from '../store';\n\nlet activeRequests = 0;\n\nconst notify = type => {\n  activeRequests += type === 'request-start' ? 1 : -1;\n  if ([0, 1].includes(activeRequests)) {\n    publish({ activeRequests });\n  }\n};\n\nconst requestFulfilled = config => {\n  notify('request-start', config);\n  return config;\n};\n\nconst requestRejected = error => {\n  notify('request-error', error);\n  return Promise.reject(error);\n};\n\nconst responseFulfilled = response => {\n  notify('response-success', response);\n  return response;\n};\n\nconst responseRejected = error => {\n  notify('response-error', error);\n  return Promise.reject(error);\n};\n\nconst isLoadingMiddleware = instance => {\n  instance.interceptors.request.use(requestFulfilled, requestRejected);\n  instance.interceptors.response.use(responseFulfilled, responseRejected);\n};\n\nexport default isLoadingMiddleware;\n","import qrEncode from '../qr-encode';\nimport { getBarcode } from '../rest/SaaspassBarcodeResource';\n\nconst getBarcodeImage = async sessionId => {\n  const { barcodeimage } = await getBarcode(sessionId);\n  return qrEncode(barcodeimage);\n};\n\nexport default getBarcodeImage;\n","import { imageSync } from 'qr-image';\n\nconst qrEncode = text => {\n  const options = { ec_level: 'L', size: 3, margin: 3 };\n  const buffer = imageSync(text, options);\n  const base64 = buffer.toString('base64');\n  return `data:image/png;base64,${base64}`;\n};\n\nexport default qrEncode;\n","/* (ignored) */","/* (ignored) */","import createInstance from '../axios/createInstance';\n\nconst axios = createInstance();\n\nexport const getBarcode = async uuid => {\n  const url = `app/rest/barcode/${uuid}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n"],"sourceRoot":""}
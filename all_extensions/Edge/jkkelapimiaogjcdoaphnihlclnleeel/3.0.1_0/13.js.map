{"version":3,"sources":["webpack:///./src/background/rest/SaaspassExtensionResource.js","webpack:///./src/background/axios/createInstance.js","webpack:///./src/background/axios/isLoadingMiddleware.js","webpack:///./src/background/axios/refreshTokenMiddleware.js","webpack:///./src/background/auth/extensionLogout.js","webpack:///./src/background/rest/logout.js","webpack:///./src/background/auth/refreshAccessToken.js","webpack:///./src/background/rest/TokenEndpoint.js","webpack:///./src/background/cryptography.js"],"names":["axios","createInstance","refreshTokenMiddleware","headerVersion","version","headerAuth","Authorization","store","access_token","generateTrackerForAppAccount","accId","appId","url","headers","response","get","data","generateTrackerForPortal","checkTrackerForPublicUserAccount","tracker","publicKey","privateKey","generateKey","body","key","post","iv","serverKey","getServerPublicKey","decryptMethod","checkTrackerForSharedAccount","getUserExtensionData","getSsoInstructions","id","decrypt","getSsoInstructionsForSharedItem","getSsoInstructionsForEpmAccount","getPublicUserCredentialsForEpmAccount","addLoginItem","serviceUrl","username","password","console","debug","loginItemAccountDTO","encrypt","JSON","stringify","getPublicUserAccountCredentials","type","getCorporateServiceAccountCredentials","middlewares","instance","create","baseURL","api","isLoadingMiddleware","forEach","middleware","activeRequests","notify","includes","publish","requestFulfilled","config","requestRejected","error","Promise","reject","responseFulfilled","responseRejected","interceptors","request","use","isTokenError","refreshAccessTokenInterceptor","refreshAccessToken","extensionLogout","logout","clear","promise","load","refresh_token","postAccessToken","params","auth","getAccessToken","extension_public_key","user_agent","navigator","userAgent","client_id","client_secret","grant_type","scope","resolve","window","crypto","subtle","name","namedCurve","then","cryptoKey","exportKey","privkey","pubkey","serverPublickey","clientPrivatekey","parse","importKey","importEcdhKey","deriveKey","derivekey","result","atob","encryptMethod","str","charList","split","uintArray","i","length","push","charCodeAt","additionalData","Uint8Array","getRandomValues","_data","TextEncoder","encode","importAesKey","tagLength","encrypted","uintToString","_iv","btoa","stringToUint","decrypted","decryptedObject","decoded","String","fromCharCode","apply","serverkey","clientkey","algo","public","keydata","mykey"],"mappings":"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","file":"13.js","sourcesContent":["import { version } from '../../../package.json';\nimport createInstance from '../axios/createInstance';\nimport refreshTokenMiddleware from '../axios/refreshTokenMiddleware';\nimport {\n  decrypt,\n  decryptMethod,\n  encrypt,\n  generateKey,\n  getServerPublicKey,\n} from '../cryptography';\nimport { store } from '../store';\n\nconst axios = createInstance(refreshTokenMiddleware);\n\n// todo: remove .0 after version parsing in backend is fixed\nconst headerVersion = () => ({ 'extension-version': `${version}.0` });\nconst headerAuth = () => ({ Authorization: `Bearer ${store.access_token}` });\n\nexport const generateTrackerForAppAccount = async (accId, appId) => {\n  const url = `app/rest/extension/tracker/${accId}/${appId}`;\n  const headers = { ...headerAuth(), ...headerVersion() };\n  const response = await axios.get(url, { headers });\n  return response.data;\n};\n\nexport const generateTrackerForPortal = async () => {\n  const url = `app/rest/extension/tracker_web`;\n  const headers = { ...headerAuth(), ...headerVersion() };\n  const response = await axios.get(url, { headers });\n  return response.data;\n};\n\nexport const checkTrackerForPublicUserAccount = async tracker => {\n  const url = `app/rest/extension/trackercheck`;\n  const { publicKey, privateKey } = await generateKey();\n  const body = { tracker, key: publicKey };\n  const headers = { ...headerVersion() };\n  const response = await axios.post(url, body, { headers });\n  const { data, iv, key } = response.data;\n  const serverKey = await getServerPublicKey(key, privateKey);\n  return await decryptMethod(data, iv, serverKey);\n};\n\nexport const checkTrackerForSharedAccount = async tracker => {\n  const url = `app/rest/extension/trackercheckshared`;\n  const { publicKey, privateKey } = await generateKey();\n  const body = { tracker, key: publicKey };\n  const headers = { ...headerVersion() };\n  const response = await axios.post(url, body, { headers });\n  const { data, iv, key } = response.data;\n  const serverKey = await getServerPublicKey(key, privateKey);\n  return await decryptMethod(data, iv, serverKey);\n};\n\nexport const getUserExtensionData = async () => {\n  const url = `app/rest/extension/useraccounts`;\n  const headers = { ...headerAuth(), ...headerVersion() };\n  const response = await axios.get(url, { headers });\n  return response.data;\n};\n\nexport const getSsoInstructions = async id => {\n  const url = `app/rest/extension/sso_instructions/${id}`;\n  const headers = { ...headerAuth(), ...headerVersion() };\n  const response = await axios.get(url, { headers });\n  const { data, iv } = response.data;\n  return await decrypt(data, iv);\n};\n\nexport const getSsoInstructionsForSharedItem = async id => {\n  const url = `app/rest/extension/shared_sso_instructions/${id}`;\n  const headers = { ...headerAuth(), ...headerVersion() };\n  const response = await axios.get(url, { headers });\n  const { data, iv } = response.data;\n  return await decrypt(data, iv);\n};\n\nexport const getSsoInstructionsForEpmAccount = async (appId, accId) => {\n  const url = `app/rest/extension/epm_sso_instructions/${appId}/${accId}`;\n  const headers = { ...headerAuth(), ...headerVersion() };\n  const response = await axios.get(url, { headers });\n  const { data, iv } = response.data;\n  return await decrypt(data, iv);\n};\n\nexport const getPublicUserCredentialsForEpmAccount = async (appId, accId) => {\n  const url = `app/rest/extension/epm_credentials/${appId}/${accId}`;\n  const headers = { ...headerAuth(), ...headerVersion() };\n  const response = await axios.get(url, { headers });\n  const { data, iv } = response.data;\n  return await decrypt(data, iv);\n};\n\nexport const addLoginItem = async (serviceUrl, username, password) => {\n  console.debug('addLoginItem', { serviceUrl, username, password });\n  const url = `app/rest/extension/addloginitem`;\n  const loginItemAccountDTO = { serviceUrl, username, password };\n  const data = await encrypt(JSON.stringify(loginItemAccountDTO));\n  const headers = { ...headerAuth(), ...headerVersion() };\n  const response = await axios.post(url, data, { headers });\n  return response.data;\n};\n\nexport const getPublicUserAccountCredentials = async (id, type) => {\n  const url = `app/rest/extension/credentials/${id}/${type}`;\n  const headers = { ...headerAuth(), ...headerVersion() };\n  const response = await axios.get(url, { headers });\n  const { data, iv } = response.data;\n  return await decrypt(data, iv);\n};\n\nexport const getCorporateServiceAccountCredentials = async (id, type) => {\n  const url = `app/rest/extension/shared_credentials/${id}/${type}`;\n  const headers = { ...headerAuth(), ...headerVersion() };\n  const response = await axios.get(url, { headers });\n  const { data, iv } = response.data;\n  return await decrypt(data, iv);\n};\n","import axios from 'axios';\nimport isLoadingMiddleware from './isLoadingMiddleware';\n\nconst createInstance = (...middlewares) => {\n  const instance = axios.create({ baseURL: api.baseURL });\n  isLoadingMiddleware(instance);\n  middlewares.forEach(middleware => middleware(instance));\n  return instance;\n};\n\nexport default createInstance;\n","import { publish } from '../store';\n\nlet activeRequests = 0;\n\nconst notify = type => {\n  activeRequests += type === 'request-start' ? 1 : -1;\n  if ([0, 1].includes(activeRequests)) {\n    publish({ activeRequests });\n  }\n};\n\nconst requestFulfilled = config => {\n  notify('request-start', config);\n  return config;\n};\n\nconst requestRejected = error => {\n  notify('request-error', error);\n  return Promise.reject(error);\n};\n\nconst responseFulfilled = response => {\n  notify('response-success', response);\n  return response;\n};\n\nconst responseRejected = error => {\n  notify('response-error', error);\n  return Promise.reject(error);\n};\n\nconst isLoadingMiddleware = instance => {\n  instance.interceptors.request.use(requestFulfilled, requestRejected);\n  instance.interceptors.response.use(responseFulfilled, responseRejected);\n};\n\nexport default isLoadingMiddleware;\n","import extensionLogout from '../auth/extensionLogout';\nimport refreshAccessToken from '../auth/refreshAccessToken';\n\nconst isTokenError = error =>\n  ['invalid_grant', 'invalid_token'].includes(error.response.data.error);\n\nconst refreshAccessTokenInterceptor = instance => async error => {\n  if (!isTokenError(error)) {\n    return Promise.reject(error);\n  }\n\n  try {\n    const access_token = await refreshAccessToken();\n    error.config.headers.Authorization = `Bearer ${access_token}`;\n    return instance.request(error.config);\n  } catch (error) {\n    if (isTokenError(error)) {\n      extensionLogout();\n    }\n    throw error;\n  }\n};\n\nconst refreshTokenMiddleware = instance => {\n  instance.interceptors.response.use(\n    null,\n    refreshAccessTokenInterceptor(instance),\n  );\n};\n\nexport default refreshTokenMiddleware;\n","import { logout } from '../rest/logout';\nimport { clear } from '../store';\n\nconst extensionLogout = () => {\n  logout();\n  clear();\n};\n\nexport default extensionLogout;\n","import createInstance from '../axios/createInstance';\nimport { store } from '../store';\n\nconst axios = createInstance();\n\n// org.springframework.security.web.authentication.logout.LogoutSuccessHandler#onLogoutSuccess\nexport const logout = async () => {\n  const url = `app/logout`;\n  const headers = { Authorization: `Bearer ${store.access_token}` };\n  const response = await axios.get(url, { headers });\n  return response.data;\n};\n","import { refreshAccessToken } from '../rest/TokenEndpoint';\nimport { publish, store } from '../store';\n\nlet promise;\n\nconst load = async () => {\n  const data = await refreshAccessToken(store.refresh_token);\n  const { access_token, refresh_token } = data;\n  publish({ access_token, refresh_token });\n  return access_token;\n};\n\nexport default async () => {\n  try {\n    return await (promise || (promise = load()));\n  } finally {\n    promise = null;\n  }\n};\n","import stringify from 'qs/lib/stringify';\nimport createInstance from '../axios/createInstance';\n\nconst axios = createInstance();\n\n// org.springframework.security.oauth2.provider.endpoint.TokenEndpoint#postAccessToken\nconst postAccessToken = async params => {\n  const auth = { username: 'SaasPassExtension', password: 'spExtensionSecSP' };\n  const response = await axios.post(`oauth/token`, stringify(params), { auth });\n  return response.data;\n};\n\nexport const getAccessToken = (username, password, extension_public_key) =>\n  postAccessToken({\n    username,\n    password,\n    extension_public_key,\n    user_agent: navigator.userAgent,\n    client_id: 'SaasPassExtension',\n    client_secret: 'spExtensionSecSP',\n    grant_type: 'password',\n    scope: 'extension',\n  });\n\nexport const refreshAccessToken = refresh_token =>\n  postAccessToken({ refresh_token, grant_type: 'refresh_token' });\n","import { store } from './store';\n\nexport function generateKey() {\n  return new Promise(resolve => {\n    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/generateKey\n    window.crypto.subtle\n      .generateKey(\n        {\n          name: 'ECDH',\n          namedCurve: 'P-256', // can be 'P-256', 'P-384', or 'P-521'\n        },\n        true, // whether the key is extractable (i.e. can be used in exportKey)\n        ['deriveKey', 'deriveBits'], // can be any combination of 'deriveKey' and 'deriveBits'\n      )\n      .then(cryptoKey => {\n        // result is a Promise that returns the generated key as a CryptoKey or a CryptoKeyPair.\n        exportKey(cryptoKey.privateKey).then(privkey => {\n          exportKey(cryptoKey.publicKey).then(pubkey => {\n            resolve({\n              privateKey: privkey,\n              publicKey: pubkey,\n            });\n          });\n        });\n      });\n  });\n}\n\nexport function getServerPublicKey(serverPublickey, clientPrivatekey) {\n  return new Promise(resolve => {\n    let key = JSON.parse(serverPublickey);\n    window.crypto.subtle\n      .importKey(\n        'jwk', // can be 'jwk' (public or private), 'raw' (public only), 'spki' (public only), or 'pkcs8' (private only)\n        key,\n        {\n          // these are the algorithm options\n          name: 'ECDH',\n          namedCurve: 'P-256', // can be 'P-256', 'P-384', or 'P-521'\n        },\n        true, // whether the key is extractable (i.e. can be used in exportKey)\n        [], // 'deriveKey' and/or 'deriveBits' for private keys only (just put an empty list if importing a public key)\n      )\n      .then(pubkey => {\n        // returns a privateKey (or publicKey if you are importing a public key)\n        importEcdhKey(clientPrivatekey).then(privkey => {\n          deriveKey(pubkey, privkey).then(derivekey => {\n            exportKey(derivekey).then(result => {\n              resolve(result);\n            });\n          });\n        });\n      });\n  });\n}\n\nexport function decrypt(data, iv) {\n  return decryptMethod(data, iv, atob(store.privateKey));\n}\n\nexport function encrypt(data) {\n  return encryptMethod(data, atob(store.privateKey));\n}\n\nfunction encryptMethod(data, key) {\n  return new Promise(resolve => {\n    let str = 'SP',\n      charList = str.split(''),\n      uintArray = [];\n    for (var i = 0; i < charList.length; i++) {\n      uintArray.push(charList[i].charCodeAt(0));\n    }\n    let additionalData = new Uint8Array(uintArray);\n    const iv = crypto.getRandomValues(new Uint8Array(12));\n    const _data = new TextEncoder().encode(data);\n\n    importAesKey(key).then(result => {\n      window.crypto.subtle\n        .encrypt(\n          {\n            name: 'AES-GCM',\n            iv: iv, // The initialization vector you used to encrypt\n            additionalData: additionalData, // The addtionalData you used to encrypt (if any)\n            tagLength: 128, // The tagLength you used to encrypt (if any)\n          },\n          result, // from generateKey or importKey above\n          _data, // ArrayBuffer of the data\n        )\n        .then(encrypted => {\n          let str = uintToString(new Uint8Array(encrypted));\n          let _iv = uintToString(iv);\n          resolve({ data: btoa(str), iv: btoa(_iv) });\n        });\n    });\n  });\n}\n\nexport function decryptMethod(data, iv, key) {\n  return new Promise(resolve => {\n    let str = 'SP',\n      charList = str.split(''),\n      uintArray = [];\n    for (var i = 0; i < charList.length; i++) {\n      uintArray.push(charList[i].charCodeAt(0));\n    }\n    let additionalData = new Uint8Array(uintArray);\n    let _iv = stringToUint(iv);\n    let _data = stringToUint(data);\n\n    importAesKey(key).then(result => {\n      window.crypto.subtle\n        .decrypt(\n          {\n            name: 'AES-GCM',\n            iv: _iv, // The initialization vector you used to encrypt\n            additionalData: additionalData, // The addtionalData you used to encrypt (if any)\n            tagLength: 128, // The tagLength you used to encrypt (if any)\n          },\n          result, // from generateKey or importKey above\n          _data, // ArrayBuffer of the data\n        )\n        .then(decrypted => {\n          // returns an ArrayBuffer containing the decrypted data\n          let str = uintToString(new Uint8Array(decrypted));\n          let decryptedObject = JSON.parse(str);\n          resolve(decryptedObject);\n        });\n    });\n  });\n}\n\nfunction stringToUint(str) {\n  let decoded = atob(str);\n  let charList = decoded.split(''),\n    uintArray = [];\n  for (var i = 0; i < charList.length; i++) {\n    uintArray.push(charList[i].charCodeAt(0));\n  }\n  return new Uint8Array(uintArray);\n}\n\nfunction uintToString(uintArray) {\n  return String.fromCharCode.apply(null, uintArray);\n}\n\nfunction deriveKey(serverkey, clientkey) {\n  let algo = {\n    name: 'ECDH',\n    namedCurve: 'P-256', // can be 'P-256', 'P-384', or 'P-521'\n    public: serverkey, // an ECDH public key from generateKey or importKey\n  };\n  return new Promise(resolve => {\n    window.crypto.subtle\n      .deriveKey(\n        algo,\n        clientkey, // your ECDH private key from generateKey or importKey\n        {\n          // the key type you want to create based on the derived bits\n          name: 'AES-GCM', //can be any AES algorithm ('AES-CTR', 'AES-CBC', 'AES-CMAC', 'AES-GCM', 'AES-CFB', 'AES-KW', 'ECDH', 'DH', or 'HMAC')\n          // the generateKey parameters for that type of algorithm\n          length: 256, //can be  128, 192, or 256\n        },\n        true, // whether the derived key is extractable (i.e. can be used in exportKey)\n        ['encrypt', 'decrypt'], //limited to the options in that algorithm's importKey\n      )\n      .then(keydata => {\n        // result is a Promise that returns the derivated key as a CryptoKey or a CryptoKeyPair.\n        resolve(keydata);\n      });\n  });\n}\n\nfunction importEcdhKey(mykey) {\n  let key = JSON.parse(mykey);\n  return new Promise(resolve => {\n    window.crypto.subtle\n      .importKey(\n        'jwk', // can be 'jwk' (public or private), 'raw' (public only), 'spki' (public only), or 'pkcs8' (private only)\n        key,\n        {\n          // these are the algorithm options\n          name: 'ECDH',\n          namedCurve: 'P-256', // can be 'P-256', 'P-384', or 'P-521'\n        },\n        true, // whether the key is extractable (i.e. can be used in exportKey)\n        ['deriveKey', 'deriveBits'], // 'deriveKey' and/or 'deriveBits' for private keys only (just put an empty list if importing a public key)\n      )\n      .then(clientkey => {\n        // returns a privateKey (or publicKey if you are importing a public key\n        resolve(clientkey);\n      });\n  });\n}\n\nfunction importAesKey(mykey) {\n  let key = JSON.parse(mykey);\n  return new Promise(resolve => {\n    window.crypto.subtle\n      .importKey(\n        'jwk', // can be 'jwk' (public or private), 'raw' (public only), 'spki' (public only), or 'pkcs8' (private only)\n        key,\n        {\n          // these are the algorithm options\n          name: 'AES-GCM', // can be any AES algorithm ('AES-CTR', 'AES-CBC', 'AES-CMAC', 'AES-GCM', 'AES-CFB', 'AES-KW', 'ECDH', 'DH', or 'HMAC'\n          length: 256, // can be  128, 192, or 256\n        },\n        true, // whether the key is extractable (i.e. can be used in exportKey)\n        ['encrypt', 'decrypt'], // 'deriveKey' and/or 'deriveBits' for private keys only (just put an empty list if importing a public key)\n      )\n      .then(clientkey => {\n        resolve(clientkey);\n      });\n  });\n}\n\nfunction exportKey(key) {\n  return new Promise(resolve => {\n    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/exportKey\n    window.crypto.subtle\n      .exportKey(\n        'jwk', // can be 'jwk' (public or private), 'raw' (public only), 'spki' (public only), or 'pkcs8' (private only)\n        key, // can be a publicKey or privateKey, as long as extractable was true\n      )\n      .then(keydata => {\n        // result is a Promise that returns the key in the requested format.\n        // returns the exported key data\n        let result = JSON.stringify(keydata);\n        resolve(result);\n      });\n  });\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/background/services/formDataSave.js","webpack:///./src/background/reloadUserData.js"],"names":["formDataSave","port","tab","sender","form","store","formData","tabId","id","username","password","urlWithoutHash","url","split","addLoginItem","reloadUserData","e","console","debug","urlWithoutParams","host","URL","rootHost","slice","join","publish","getUserExtensionData"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA,MAAMA,YAAY,GAAG,MAAMC,IAAN,IAAc;AACjC,QAAMC,GAAG,GAAGD,IAAI,CAACE,MAAL,CAAYD,GAAxB;AACA,QAAME,IAAI,GAAGC,4CAAK,CAACC,QAAN,CAAeC,KAAf,KAAyBL,GAAG,CAACM,EAA7B,GAAkCH,4CAAK,CAACC,QAAxC,GAAmD,EAAhE;AACA,QAAM;AAAEG,YAAF;AAAYC;AAAZ,MAAyBN,IAA/B;AAEA,QAAM,CAACO,cAAD,IAAmBT,GAAG,CAACU,GAAJ,CAAQC,KAAR,CAAc,GAAd,CAAzB;;AAEA,MAAI;AACF,UAAMC,oFAAY,CAACH,cAAD,EAAiBF,QAAjB,EAA2BC,QAA3B,CAAlB;AACA,UAAMK,+DAAc,EAApB;AACA;AACD,GAJD,CAIE,OAAOC,CAAP,EAAU,CAAE,CAXmB,CAajC;;;AAEAC,SAAO,CAACC,KAAR,CAAc,sCAAd,EAAsDP,cAAtD;AACA,QAAM,CAACQ,gBAAD,IAAqBjB,GAAG,CAACU,GAAJ,CAAQC,KAAR,CAAc,GAAd,CAA3B;AACAI,SAAO,CAACC,KAAR,CAAc,2BAAd,EAA2CC,gBAA3C;;AAEA,MAAI;AACF,UAAML,oFAAY,CAACK,gBAAD,EAAmBV,QAAnB,EAA6BC,QAA7B,CAAlB;AACA,UAAMK,+DAAc,EAApB;AACA;AACD,GAJD,CAIE,OAAOC,CAAP,EAAU,CAAE;;AAEdC,SAAO,CAACC,KAAR,CAAc,qCAAd,EAAqDC,gBAArD;AAEA,QAAMC,IAAI,GAAG,IAAIC,GAAJ,CAAQnB,GAAG,CAACU,GAAZ,EAAiBQ,IAA9B;AACAH,SAAO,CAACC,KAAR,CAAc,kBAAd,EAAkCE,IAAlC;;AAEA,MAAI;AACF,UAAMN,oFAAY,CAAE,WAAUM,IAAK,EAAjB,EAAoBX,QAApB,EAA8BC,QAA9B,CAAlB;AACA,UAAMK,+DAAc,EAApB;AACA;AACD,GAJD,CAIE,OAAOC,CAAP,EAAU,CAAE;;AAEdC,SAAO,CAACC,KAAR,CAAc,gCAAd,EAAgDE,IAAhD;AAEA,QAAME,QAAQ,GAAGF,IAAI,CAClBP,KADc,CACR,GADQ,EAEdU,KAFc,CAER,CAAC,CAFO,EAGdC,IAHc,CAGT,GAHS,CAAjB;AAIAP,SAAO,CAACC,KAAR,CAAc,uBAAd,EAAuCI,QAAvC;AAEA,QAAMR,oFAAY,CAAE,WAAUQ,QAAS,EAArB,EAAwBb,QAAxB,EAAkCC,QAAlC,CAAlB;AACA,QAAMK,+DAAc,EAApB;AACD,CA9CD;;AAgDef,2EAAf,E;;;;;;;;ACpDA;AAAA;AAAA;AAAA;AACA;;AAEA,MAAMe,cAAc,GAAG,YAAYU,sDAAO,EAAC,MAAMC,4FAAoB,EAA3B,EAA1C;;AAEeX,6EAAf,E","file":"25.js","sourcesContent":["import reloadUserData from '../reloadUserData';\nimport { addLoginItem } from '../rest/SaaspassExtensionResource';\nimport { store } from '../store';\n\nconst formDataSave = async port => {\n  const tab = port.sender.tab;\n  const form = store.formData.tabId === tab.id ? store.formData : {};\n  const { username, password } = form;\n\n  const [urlWithoutHash] = tab.url.split('#');\n\n  try {\n    await addLoginItem(urlWithoutHash, username, password);\n    await reloadUserData();\n    return;\n  } catch (e) {}\n\n  // todo: check backend. why failed?\n\n  console.debug('addLoginItem with url params failed.', urlWithoutHash);\n  const [urlWithoutParams] = tab.url.split('?');\n  console.debug('trying without url params', urlWithoutParams);\n\n  try {\n    await addLoginItem(urlWithoutParams, username, password);\n    await reloadUserData();\n    return;\n  } catch (e) {}\n\n  console.debug('addLoginItem without params failed.', urlWithoutParams);\n\n  const host = new URL(tab.url).host;\n  console.debug('trying with host', host);\n\n  try {\n    await addLoginItem(`https://${host}`, username, password);\n    await reloadUserData();\n    return;\n  } catch (e) {}\n\n  console.debug('addLoginItem with host failed.', host);\n\n  const rootHost = host\n    .split('.')\n    .slice(-2)\n    .join('.');\n  console.debug('trying with root host', rootHost);\n\n  await addLoginItem(`https://${rootHost}`, username, password);\n  await reloadUserData();\n};\n\nexport default formDataSave;\n","import { getUserExtensionData } from './rest/SaaspassExtensionResource';\nimport { publish } from './store';\n\nconst reloadUserData = async () => publish(await getUserExtensionData());\n\nexport default reloadUserData;\n"],"sourceRoot":""}